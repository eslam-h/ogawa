<?xml version="1.0" encoding="utf-8"?>
<modification>
  <name>Sales Combination 1c : Product Same Options Offer</name>
  <code>sc1cpsof</code>
  <version>4.1</version>
  <author>cartbinder.com</author>
  <link>http://store.cartbinder.com</link>
  <file path="system/library/cart/cart.php">
    <operation>
      <search><![CDATA[public function getWeight() {]]>
      </search><add position="before"><![CDATA[
      public function salesonecombo1c(){if(isset($this->session->data['slscmdprdts']) && !empty($this->session->data['slscmdprdts'])){
        //$this->log->write("wholesaleconditionexists");$this->log->write(print_r($this->session->data['slscmdprdts'],true));
          $query = $this->db->query("SELECT  * FROM " . DB_PREFIX . "cartbindercombo1c_setting WHERE status = '1'");foreach($query->rows as $step => $destination) {
$query = "SELECT language_id ,title as name FROM ".DB_PREFIX."cartbindercombo1c_setting_description WHERE offer_id = ".$destination['id'] ;
            $results = $this->db->query($query)->rows;
        
            $values = array();
            foreach($results as $result)
            { 
                $values[$result['language_id']] = $result['name'];
            }
            $destination['name'] = $values;
$primaryarray = $destination['primarypids'];
          if($this->checkCg($destination['cids'])) {continue;}
          if(!array_key_exists($primaryarray,$this->session->data['slscmdprdts'])) {
            continue;
          }

           $cart_query = $this->db->query("SELECT `option`,`cart_id`,`quantity` FROM " . DB_PREFIX . "cart WHERE customer_id = '" . (int)$this->customer->getId() . "' AND session_id = '" . $this->db->escape($this->session->getId()) . "' AND product_id  = '".$primaryarray."'");
           $commonseocndaryquantity = 0;
           foreach($cart_query->rows as $key => $value) {
              $bit = 0;
              $customerselectedoptions = json_decode($value['option'],true);
              $optionset = json_decode($destination['optionidarray'],true);
               if(is_array($customerselectedoptions) && empty($customerselectedoptions)) {
                continue;
              }
              if(is_array($optionset) && empty($optionset)) {
                continue;
              }
              //$this->log->write(print_r($optionset,true));$this->log->write(print_r($customerselectedoptions,true));
              foreach($optionset as $optionkey => $optionvalue) {
                if($destination['anyorall']) {
                  //check if key exist
                  if(array_key_exists($optionkey,$customerselectedoptions)) {

                    //check if value exist
                    if(is_array($optionvalue)) {
                      foreach($optionvalue as $optionkey1 => $optionvalue1) {
                        if(in_array($optionvalue1,$customerselectedoptions[$optionkey])) {
                          $bit = 1;
                        }
                      }
                    } else {
                      if($customerselectedoptions[$optionkey] == $optionvalue) {
                        $bit = 1;
                      }
                    }
                  }
                } else {
                  $bit = 1;
                  //check if key exist
                  if(!array_key_exists($optionkey,$customerselectedoptions)) {
                    $bit = 0;
                     break;
                  }


                  //check if value exist
                  if(is_array($optionvalue)) {
                    foreach($optionvalue as $optionkey1 => $optionvalue1) {
                      if(!in_array($optionvalue1,$customerselectedoptions[$optionkey])) {
                        $bit = 0;
                        break;
                      }
                    }
                  } else {
                    if($customerselectedoptions[$optionkey] != $optionvalue) {
                      $bit = 0;
                      break;
                    }
                  }
                } 
              }
              //$this->log->write("bit value".$bit);
              if($bit) {
                 $commonseocndaryquantity += $value['quantity'];
                $secondarycartids[] = $value['cart_id'];
              }
            }
            if($commonseocndaryquantity > $destination['primaryquant']) {
              //$netquantity = floor($commonseocndaryquantity/($destination['primaryquant']+$destination['secondaryquant']));
              $netquantity = $this->xnfrmla($commonseocndaryquantity,$destination['primaryquant'],$destination['secondaryquant']);
            } else {
              break;
            }
            if(empty($secondarycartids) || $netquantity == 0) {
              break;
            }
            //$this->log->write("netquantity value".$netquantity);
            $i = 0;if($netquantity > 0) {$i = 1;}
            $version = str_replace(".","",VERSION);$spprtsimproopt = array();$temp  = $netquantity;$quantityapply = $temp;
            if($version > 2100) {
              $cart_query = $this->db->query("SELECT  c.cart_id,c.quantity,c.product_id FROM " . DB_PREFIX . "cart c LEFT JOIN " . DB_PREFIX . "product p ON (p.product_id = c.product_id) WHERE c.customer_id = '" . (int)$this->customer->getId() . "' AND c.session_id = '" . $this->db->escape($this->session->getId()) . "' AND c.product_id  = '".$primaryarray."' ORDER BY p.price ASC");
              foreach ($cart_query->rows as $cart) {
               if(!isset($this->session->data['cartbindercombooffers'][$cart['cart_id']])) {
                $product_id = $cart['product_id'];
                if(in_array($cart['cart_id'],$secondarycartids) && ($quantityapply > 0)) {
                 $temp = $quantityapply;$quantityapply = $quantityapply - $cart['quantity'];
                 $i = 0; $this->session->data['cartbindercombooffers_offerapplied'][] = $destination['sales_offer_id'];
                 // $this->log->write("Quantity apply : ".$quantityapply."Temp : ".$temp);
                  $this->session->data['cartbindercombooffers'][$cart['cart_id']] = $destination;if($quantityapply >= 0) {$this->session->data['cartbindercombooffers'][$cart['cart_id']]['quantity'] = $cart['quantity'];} else {$this->session->data['cartbindercombooffers'][$cart['cart_id']]['quantity'] = $temp;} if($quantityapply <= 0) {break;}
                  //$this->log->write("offer on product id ".$product_id);$this->log->write(print_r($this->session->data['cartbindercombooffers'],true));
                  }
                }
              }
            } else {
              foreach ($this->session->data['cart'] as $key => $quantity) {
                if(!isset($this->session->data['cartbindercombooffers'][$key])) {
                  $product = unserialize(base64_decode($key));$product_id = $product['product_id'];
                  if(in_array($product_id,$secondaryarray) && ($quantityapply > 0)) {
                    $temp = $quantityapply;$quantityapply = $quantityapply - $quantity;
                    $i = 0;
                     $this->session->data['cartbindercombooffers_offerapplied'][] = $destination['sales_offer_id'];
                    //$this->log->write("Quantity apply : ".$quantityapply."Temp : ".$temp);
                    $this->session->data['cartbindercombooffers'][$key] =  $destination;
                    if($quantityapply >= 0) {
                      $this->session->data['cartbindercombooffers'][$key]['quantity'] = $quantity;
                      } else {
                    $this->session->data['cartbindercombooffers'][$key]['quantity'] = $temp;
                    } if($quantityapply <= 0) {break;}
                    //$this->log->write("offer on product id ".$product_id);$this->log->write(print_r($this->session->data['cartbindercombooffers'],true));
                 }}}}if($i){$this->session->data['cartbindercombooffers_pages'][] = $destination['sales_offer_id'];}}}}]]></add>
    </operation>
    <operation>
      <search><![CDATA[$this->sortcombination();]]>
      </search><add position="after"><![CDATA[$this->salesonecombo1c();]]>
      </add>
    </operation>
  </file>
   <file path="catalog/model/extension/total/salescombo.php">
    <operation>
      <search><![CDATA[return $availableoffers;]]>
      </search>
      <add position="before"><![CDATA[$availableoffers['notab'] .= $this->combo1c($product_id);$availableoffers['tab'] .= $this->combo1ctab($product_id);]]>
      </add>
    </operation>
    <operation>
      <search><![CDATA[public function getAvailableOffers($product_id) {]]>
      </search>
      <add position="before"><![CDATA[
        public function combo1c($product_id) {
    $this->load->language('extension/total/salescombo');
    $data['addqty'] = $this->language->get('addqty');
    $data['getqty'] = $this->language->get('getqty');
    $data['offertag'] = $this->language->get('offertag');
    $data['foroptions'] = $this->language->get('foroptions');
    $data['button_bundle'] = $this->language->get('button_bundle');
    $data['offers'] = array();
    $query = $this->db->query("SELECT c.*, des.title as name FROM " . DB_PREFIX . "cartbindercombo1c_setting c LEFT JOIN " . DB_PREFIX . "cartbindercombo1c_setting_description des on des.offer_id = c.id WHERE des.language_id = ".(int)$this->config->get('config_language_id')." AND status = '1' AND showoffer = '1' AND FIND_IN_SET('".$product_id."',`primarypids`)>0 AND displaylocation = 0");
    foreach ($query->rows as $key => $value) {
      if($this->checkCg($value['cids'])) {continue;}
      $data['offers'] = $this->generateOffer($value);
    }
    
    return $this->load->view('extension/module/salescombo', $data);
  }

   public function combo1ctab($product_id) {
    $this->load->language('extension/total/salescombo');
    $data['addqty'] = $this->language->get('addqty');
    $data['getqty'] = $this->language->get('getqty');
    $data['offertag'] = $this->language->get('offertag');
    $data['foroptions'] = $this->language->get('foroptions');
    $data['button_bundle'] = $this->language->get('button_bundle');
    $data['offers'] = array();
    $query = $this->db->query("SELECT c.*, des.title as name FROM " . DB_PREFIX . "cartbindercombo1c_setting c LEFT JOIN " . DB_PREFIX . "cartbindercombo1c_setting_description des on des.offer_id = c.id WHERE des.language_id = ".(int)$this->config->get('config_language_id')." AND status = '1' AND showoffer = '1' AND FIND_IN_SET('".$product_id."',`primarypids`)>0 AND displaylocation = 1");
    foreach ($query->rows as $key => $value) {
      if($this->checkCg($value['cids'])) {continue;}
      $data['offers'] = $this->generateOffer($value);
    }
    
    return $this->load->view('extension/module/salescombo', $data);
  }
        ]]>
      </add>
    </operation>
  </file>
</modification>